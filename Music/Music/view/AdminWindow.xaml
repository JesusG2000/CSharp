<Window x:Class="Music.view.AdminWindow"
         Background="AliceBlue"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Music.view"
        mc:Ignorable="d"
        Title="AdminWindow" Height="450" Width="856">
    <Window.Resources>
        <Style TargetType="Button">
            <Style.Setters>
                <Setter Property="Button.Background" Value="Black" />
                <Setter Property="Button.Foreground" Value="White" />
                <Setter Property="Button.FontFamily" Value="Verdana" />
                <Setter Property="Button.Margin" Value="12" />
            </Style.Setters>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True" />
                        <Condition Property="IsPressed" Value="True" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="Foreground" Value="Red" />
                    </MultiTrigger.Setters>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>
    <Grid>

        <Slider Name="SongSlider" HorizontalAlignment="Left" Margin="398,10,0,0" VerticalAlignment="Top" Width="69" Value="1" ValueChanged="songSound"/>
        <Menu DockPanel.Dock="Top" Background="{x:Null}">
            <MenuItem x:Name="menuLanguage" Header="{DynamicResource lang}" />
        </Menu>
        <StackPanel Margin="189,-2,432.6,347">
            <Label x:Name="lblStatus" Content="Not playing..." HorizontalContentAlignment="Center" Margin="5,5,4.8,5" />
            <WrapPanel HorizontalAlignment="Center" Margin="10,0" Width="192">
                <Button x:Name="btnPlay" Click="btnPlay_Click" Content="{DynamicResource admin_window_play}" Width="34"/>
                <Button x:Name="btnPause" Margin="5,0" Click="btnPause_Click" Content="{DynamicResource admin_window_pause}" Width="40" Height="19"/>
                <Button x:Name="btnStop" Click="btnStop_Click" Content="{DynamicResource admin_window_stop}" Width="33"/>
            </WrapPanel>

        </StackPanel>
        <DataGrid ColumnWidth="*" SelectionMode="Single" CanUserAddRows="False" CanUserDeleteRows="False"  AutoGenerateColumns="False" Name="userGrid" HorizontalAlignment="Left" Height="331" Margin="10,79,0,0" VerticalAlignment="Top" Width="150"  Loaded="loadInUserGrid" EnableColumnVirtualization="True">
            <DataGrid.Columns>

                <DataGridTextColumn IsReadOnly="True" Header="{DynamicResource admin_window_id}" Binding="{Binding Id}" />
                <DataGridTextColumn IsReadOnly="True" Header="{DynamicResource admin_window_login}" Binding="{Binding Login}" />


            </DataGrid.Columns>
        </DataGrid>
        <Button Content="{DynamicResource admin_window_delete_selected_user}" HorizontalAlignment="Left" Margin="640,7,0,0" VerticalAlignment="Top" Width="200" Click="deleteSelectedFromUserGrid"/>
        <Button Content="{DynamicResource admin_window_logout}" HorizontalAlignment="Left" Margin="640,391,0,0" VerticalAlignment="Top" Width="200" Click="logout"/>
        <Button Content="{DynamicResource admin_window_dialog}" HorizontalAlignment="Left" Margin="640,367,0,0" VerticalAlignment="Top" Width="200" Click="dialogs"/>
        <Button Content="{DynamicResource admin_window_create_song}" HorizontalAlignment="Left" Margin="640,55,0,0" VerticalAlignment="Top" Width="200" Click="createSong"/>
        <DataGrid Name="SongDrid" ColumnWidth="*" SelectionMode="Single" CanUserAddRows="False" CanUserDeleteRows="False"  AutoGenerateColumns="False" HorizontalAlignment="Left" Height="331" Margin="165,79,0,0" VerticalAlignment="Top" Width="470" Loaded="loadInSongGrid">
            <DataGrid.Columns>

                <DataGridTextColumn IsReadOnly="True" Header="{DynamicResource casual_window_name}" Binding="{Binding Name}" />
                <DataGridTextColumn IsReadOnly="True" Header="{DynamicResource casual_window_type}" Binding="{Binding Type}" />
                <DataGridTextColumn IsReadOnly="True" Header="{DynamicResource casual_window_author_name}" Binding="{Binding AuthorName}" />
                <DataGridTextColumn IsReadOnly="True" Header="{DynamicResource create_song_window_realise_date}" Binding="{Binding ReleaseDate}" />
                <DataGridTextColumn IsReadOnly="True" Header="{DynamicResource casual_window_album}" Binding="{Binding Album}" />
                <DataGridTextColumn IsReadOnly="True" Header="{DynamicResource casual_window_duraction}" Binding="{Binding Duraction}" />


            </DataGrid.Columns>
        </DataGrid>
        <Button Content="{DynamicResource admin_window_delete_selected_song}" Margin="640,31,0,0" VerticalAlignment="Top" Click="deleteSong" HorizontalAlignment="Left" Width="200"/>
        <Button Content="{DynamicResource admin_window_update_selected_song}" HorizontalAlignment="Left" Margin="640,79,0,0" VerticalAlignment="Top" Width="200" Click="updateSong"/>
        <Button Content="{DynamicResource admin_window_play_selected_song}" HorizontalAlignment="Left" Margin="640,103,0,0" VerticalAlignment="Top" Width="200" Click="playSelectedSong"/>
        <Button Content="{DynamicResource admin_window_see_description}" HorizontalAlignment="Left" Margin="640,127,0,0" VerticalAlignment="Top" Width="200" Click="seeDescription"/>

    </Grid>
</Window>
